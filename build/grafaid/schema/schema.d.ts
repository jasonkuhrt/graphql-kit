import { Effect } from 'effect';
import { type GraphQLSchema } from 'graphql';
import { ParseError } from '../parse-error.js';
export { buildClientSchema as fromIntrospectionQuery, GraphQLSchema as Schema, introspectionFromSchema as toIntrospectionQuery, printSchema as print, } from 'graphql';
export declare const fromAST: (ast: AST.Document) => Effect.Effect<GraphQLSchema, ParseError>;
export * as AST from './ast.js';
export * as Type from './type.js';
export * from './type-class-name.js';
export * from './type-kind-name.js';
export * as Kinds from './kinds.js';
export * from './RootDetails.js';
export * from './RootTypeMap.js';
export * from './StandardRootTypeName.js';
export * from './KindMap/__.js';
export * from './typeGuards.js';
export * from './scalars.js';
export * as Args from './args.js';
export * as TypesLike from './types-like.js';
export * as Helpers from './helpers.js';
export * as NodesLike from './nodes-like.js';
export * from './read.js';
export * from './format-default-value.js';
import * as AST from './ast.js';
export declare const empty: GraphQLSchema;
//# sourceMappingURL=schema.d.ts.map